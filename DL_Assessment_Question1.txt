### Question 1_a: 

(A). Implementing Deep Learning (DL) in a real-world application involves several steps:

1. Define the Problem: Clearly define the problem you want to solve and determine if DL is the right approach. DL is suitable for tasks such as image and speech recognition, natural language processing, and more.

2. Collect and Preprocess Data: Gather a sufficient amount of labeled data for training and testing. Preprocess the data to ensure it is in a suitable format and is representative of the real-world scenarios

3. Choose a DL Framework: Select a deep learning framework such as TensorFlow, PyTorch, or Keras. These frameworks provide a set of tools and abstractions to simplify the implementation of neural networks.

4. Design the Neural Network Architecture: Define the architecture of your neural network. This includes the number and type of layers, the activation functions, and the connections between neurons

5. Train the Model: Split your dataset into training and testing sets. Train the model on the training set using an optimization algorithm, adjusting the weights and biases of the network to minimize the error

6. Validate and Tune: Evaluate the model on the validation set to ensure it generalizes well to new data. Fine-tune hyperparameters and architecture based on performance

7. Deploy the Model: Once satisfied with the model's performance, deploy it to the real-world environment. This could involve integrating it into a web application, a mobile app, or an embedded system.

8. Monitor and Update: Regularly monitor the model's performance in the real-world environment. If necessary, update the model with new data and retrain it to adapt to changing conditions.


### Question 1_b:

Usage of Activation Function:

* Introducing Non-Linearity: Activation functions introduce non-linearities into the network, allowing it to model and understand complex patterns and relationships in the data.

* Learning Complex Representations: Non-linear activation functions enable the neural network to learn hierarchical and intricate representations of the input data, which is essential for capturing features at different levels of abstraction.

* Gradient Descent Optimization: Activation functions help in the optimization process during training by providing gradients that allow the network to adjust its parameters through backpropagation.

* Problem Without Activation Function:- If neural networks had no activation functions, they would fail to learn the complex non-linear patterns that exist in real-world data